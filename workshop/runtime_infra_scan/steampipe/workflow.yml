# =============================================================================
# STEAMPIPE RUNTIME INFRASTRUCTURE SCAN JOB
# =============================================================================
#
# Steampipe is a SQL-based infrastructure analysis tool for cloud platforms
# Repository: https://github.com/turbot/steampipe
#
# PREREQUISITES:
# - An AWS IAM role with the following policies:
#   - `arn:aws:iam::aws:policy/SecurityAudit`
#   - `arn:aws:iam::aws:policy/job-function/ViewOnlyAccess`
#     - More info about it in https://steampipe.io/docs/aws/setup
# - Configure role arn as secret in the repository, called `AWS_IAM_ROLE_ARN`
# - Configure AWS Region as variable in the repository, called `AWS_REGION`
# - Configure AWS IAM Role Session Duration as variable in the repository (default: 3600 seconds), called `AWS_IAM_ROLE_SESSION_DURATION`
#
# TO USE THIS JOB:
# 1. Copy this entire job definition into .github/workflows/runtime-infra-scan.yml
# 2. Replace the current jobs: definition with this one
# 3. The job will automatically scan your AWS infrastructure using Steampipe
# 4. The scan will fail if any critical security issues are found
# =============================================================================

jobs:
  runtime-infra-scan:
    name: Runtime Infrastructure Scan with Steampipe
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.scan-result.outputs.result }}
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
            role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
            role-session-name: SteampipeSession
            aws-region: ${{ vars.AWS_REGION }}
            role-duration-seconds: ${{ vars.AWS_IAM_ROLE_SESSION_DURATION }}
            mask-aws-account-id: true

      - name: Setup Steampipe
        uses: turbot/steampipe-action-setup@48bd85e67fddae9843fe2ad7ef6af96a332507c5 # v1
        with:
          steampipe-version: 'latest'
          plugin-connections: |
            connection "aws" {
              plugin = "aws"
              regions = ["${{ vars.AWS_REGION }}"]
            }

      - name: Install AWS compliance benchmarks
        run: |
          # Install the AWS plugin to connect to AWS services
          steampipe plugin install aws
          # Install the AWS compliance mod which contains security benchmarks
          steampipe mod install steampipe-mod-aws-compliance

      - name: Run Steampipe AWS security compliance checks
        id: steampipe
        run: |
          # Run AWS CIS v1.4.0 Level 2 benchmark checks
          # CIS (Center for Internet Security) provides industry-accepted security standards
          steampipe check benchmark.cis_v140_2 \
            --progress=false \
            --export=steampipe-results.html \
            --output=brief
        continue-on-error: true

      - name: Upload Steampipe HTML Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: steampipe-html-report
          path: steampipe-results.html
          retention-days: 3

      - name: Set scan result
        id: scan-result
        if: always()
        run: |
          if [ "${{ steps.steampipe.outcome }}" == "success" ]; then
            echo "result=success" >> "$GITHUB_OUTPUT"
            echo "✅ Runtime infrastructure scan passed - no critical issues found"
          else
            echo "result=failure" >> "$GITHUB_OUTPUT"
            echo "❌ Runtime infrastructure scan failed - security issues detected"
          fi