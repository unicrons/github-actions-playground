# =============================================================================
# PROWLER REPOSITORY SCAN JOB
# =============================================================================
#
# Prowler is a security scanner for Cloud Infrastructure
# Repository: https://github.com/prowler-cloud/prowler
#
# PREREQUISITES: #TODO
#
# TO USE THIS JOB:
# 1. Copy this entire job definition into .github/workflows/pipeline-scan.yml
# 2. Replace the current jobs: definition with this one
# 3. The job will automatically scan the current repository settings
# 4. The scan will fail if any security issues are found in the repository
#
# Note: This job is complementary to the other pipeline scan jobs, as focuses
#       on the repository settings and not on the GitHub Actions workflows.
# =============================================================================

jobs:
  repository-scan:
    name: Repository Scan with Prowler
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.scan-result.outputs.result }}
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install Prowler
        run: |
            pipx install prowler
            prowler -v

      - name: Run Prowler
        id: prowler
        run: |
            prowler github --repository {{ github.repository }} --output-formats html
        continue-on-error: true

      - name: Message
        run: |
            echo "Prowler run completed"

      - name: Upload Prowler HTML Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: prowler-html-report
          path: output/*.html
          retention-days: 1

      - name: Set scan result
        id: scan-result
        if: always()
        run: |
          if [ "${{ steps.prowler.outcome }}" == "success" ]; then
            echo "result=success" >> "$GITHUB_OUTPUT"
            echo "✅ Pipeline scan passed"
          else
            echo "result=failure" >> "$GITHUB_OUTPUT"
            echo "❌ Pipeline scan failed"
          fi
