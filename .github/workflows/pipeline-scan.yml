name: Pipeline Security Scan

on:
  workflow_call:
    outputs:
      scan-result:
        description: "Pipeline scan result"
        value: ${{ jobs.pipeline-scan.outputs.result }}

jobs:
  runtime-infra-scan:
    name: Runtime Infrastructure Scan with Steampipe
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.scan-result.outputs.result }}
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
            role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
            role-session-name: SteampipeSession
            aws-region: ${{ vars.AWS_REGION }}
            role-duration-seconds: ${{ vars.AWS_IAM_ROLE_SESSION_DURATION }}
            mask-aws-account-id: true

      - name: Setup Steampipe
        uses: turbot/steampipe-action-setup@48bd85e67fddae9843fe2ad7ef6af96a332507c5 # v1
        with:
          steampipe-version: 'latest'
          plugin-connections: |
            connection "aws" {
              plugin = "aws"
              regions = ["${{ vars.AWS_REGION }}"]
            }

      - name: Install Powerpipe
        uses: turbot/powerpipe-action-setup@458766075e63ffeb1992e6109759526f68611708 # v1

      - name: Start steampipe service
        run: |
          steampipe service start

      - name: Run specific AWS Compliance benchmarks
        uses: turbot/powerpipe-action-check@0b905d17e8b6970bc39bcd347c053992bd8770de # v1.0.1
        with:
          mod-url: https://github.com/turbot/steampipe-mod-aws-compliance
          benchmarks: |
            cis_v150
          artifact-exports: html

      - name: Upload Powerpipe HTML Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: powerpipe-html-report
          path: aws_compliance.benchmark.cis_v150.*.html
          retention-days: 3

      - name: Set scan result
        id: scan-result
        if: always()
        run: |
          if [ "${{ steps.powerpipe.outcome }}" == "success" ]; then
            echo "result=success" >> "$GITHUB_OUTPUT"
            echo "✅ Runtime infrastructure scan passed - no critical issues found"
          else
            echo "result=failure" >> "$GITHUB_OUTPUT"
            echo "❌ Runtime infrastructure scan failed - security issues detected"
          fi